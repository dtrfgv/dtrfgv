% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Fonctions_RF_evo_Modif_pierre.R
\name{rfgv}
\alias{rfgv}
\title{rfgv}
\usage{
rfgv(data, group, groupImp, ntree = 200,
  mtry_group = floor(sqrt(length(unique(group[!is.na(group)])))),
  maxdepth = 1, kfold = 3, replace = T, sampsize = ifelse(replace
  == T, nrow(data), floor(0.632 * nrow(data))), case_min = 1,
  grp.importance = TRUE, test = NULL, keep_forest = F, crit = 1,
  penalty = "No", sampvar = FALSE, sampvar_type = "1",
  mtry_var = sapply(as.numeric(table(group[!is.na(group)])), function(x)
  floor(sqrt(x))))
}
\arguments{
\item{data}{a data frame containing the response value and the predictors
and used to grow the tree}

\item{group}{a vector with the group number of each variable}

\item{groupImp}{a vector with the group number of each variable ==> the group used to compute the variable importance}

\item{ntree}{the number of trees to grow}

\item{mtry_group}{the number of variables randomly samples as candidates at each split}

\item{maxdepth}{only used with method="CARTGV". Integer indicating the maximal depth for a split-tree.
The default value is 2.}

\item{kfold}{only used with method="TPLDA". Integer indicating the numberof folds required
in the crossvalidation used to select the value of lambda.}

\item{replace}{Drawn of the bootstrap samples with or without replacment}

\item{sampsize}{the size of each boostrap sample}

\item{case_min}{minimun number of cases/non cases in a terminal nodes. For CARTGV, the default
is 1 while it is the number of fold for TPLDA.}

\item{grp.importance}{a boolean indicating the claculation or not of the importance of eacg group}

\item{test}{an independent data frame containing the same value that data}

\item{keep_forest}{a boolean indicating if the forest will be retained in the output object}

\item{crit}{the impurity function used (1=Gini/2=Entropie/3=Misclas)}

\item{penalty}{Yes or No}

\item{sampvar}{a boolean indicating if within each tree-split, a subset of variables is drawn for each group}

\item{sampvar_type}{if sampvar_type="1" for each group a subset of variables belonging to the group
is drawn at the beging of the tree-split and only these variables are used to build the tree-split.
if sampvar_type="2" for each group, a subset of variables belonging to the group is drawn before each
split withion the tree-split.}

\item{mtry_var}{usefull only if sampvar=TRUE. It indicates the number of drawn variables}
}
\value{
forest list
}
\description{
Random Forest for Grouped Variables
}
\examples{
data(rfgv_dataset)
data(group)
data <- rfgv_dataset
train<-data[which(data[,1]=="train"),-1]           # negative index into the `data` 
test<-data[which(data[,1]=="test"),-1]             # object specifying all rows and all columns 
validation<-data[which(data[,1]=="validation"),-1] # except the first column.

forest<-rfgv(train,
             group=group,
             groupImp=group,
             ntree=1,
             mtry_group=3,
             sampvar=TRUE,
             sampvar_type=2,
             maxdepth=2,
             kfold=3,
             replace=TRUE,
             case_min=1,
             sampsize=nrow(train),
             mtry_var=rep(2,5),
             grp.importance=TRUE,
             test=test,
             keep_forest=FALSE,
             crit=1,
             penalty="No")
}
